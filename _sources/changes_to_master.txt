
.. _changes_to_master:

===============================
Changes to master since v5.3.1
===============================

The changes below will be incorporated in Clawpack 5.4.0, or can be obtained
in the GitHub master branch, see :ref:`setup_dev`.

Follow the links to see changes that have been made to the master branch of
each repository since the last release (v5.3.1) on May 21, 2015.

These changes should appear in the next release.  If you need them now,
see :ref:`developers` for instructions on cloning and installing from the
master branch. 


Changes to classic
------------------

A new `Makefile` structure has been introduced so that the `Makefile` in 
each application directory does not need to explicitly list all of the 
library files.  Instead a common `Makefile` is referenced for this list.

See `classic diffs
<https://github.com/clawpack/classic/compare/v5.3.1...master>`_

Changes to clawutil
-------------------

New utilities were added to handle the new `Makefile` system, allowing
the user to specify routines that are to be replaced from the standard
library list.

See `clawutil diffs
<https://github.com/clawpack/clawutil/compare/v5.3.1...master>`_

Changes to visclaw
------------------

 
See `visclaw diffs
<https://github.com/clawpack/visclaw/compare/v5.3.1...master>`_

Changes to riemann
------------------

See `riemann diffs
<https://github.com/clawpack/riemann/compare/v5.3.1...master>`_

Changes to amrclaw
------------------

Bug fixes.

Faster bound.

A new `Makefile` structure has been introduced so that the `Makefile` in 
each application directory does not need to explicitly list all of the 
library files.  Instead a common `Makefile` is referenced for this list.

The calling sequences for `src/2d/bc2amr.f` and `src/3d/bc3amr.f` have been
cleaned up to remove parameters that are found in `amr_module`.  **This
change is not backward compatible.**  If you have applications with a custom
boundary condition routine, it must be modified to use this new calling
sequence and to `use` other parameters from `amr_module` if required.

The dummy parameters for the corners of the patch boundary passed in to the
routines `src/2d/bc2amr.f` and `src/3d/bc3amr.f` have also been renamed to be
more consistent with other names:  `xlow_patch`, `xhi_patch` and similarly
for `y` and `z`.

See `amrclaw diffs
<https://github.com/clawpack/amrclaw/compare/v5.3.1...master>`_

Changes to geoclaw
------------------

A new `Makefile` structure has been introduced so that the `Makefile` in 
each application directory does not need to explicitly list all of the 
library files.  Instead a common `Makefile` is referenced for this list.

The calling sequence for `src/2d/shallow/bc2amr.f` has been
cleaned up to remove parameters that are found in `amr_module`.  **This
change is not backward compatible.**  If you have applications with a custom
boundary condition routine, it must be modified to use this new calling
sequence and to `use` other parameters from `amr_module` if required.

The dummy parameters for the corners of the patch boundary passed in to the
routines `src/2d/bc2amr.f` and `src/3d/bc3amr.f` have also been renamed to be
more consistent with other names:  `xlow_patch`, `xhi_patch` and similarly
for `y` and `z`.

See `geoclaw diffs
<https://github.com/clawpack/geoclaw/compare/v5.3.1...master>`_


Changes to PyClaw
------------------


For changes in PyClaw, see the `PyClaw changelog
<https://github.com/clawpack/pyclaw/blob/master/CHANGES.md>`_.

See `pyclaw diffs
<https://github.com/clawpack/pyclaw/compare/v5.3.1...master>`_

