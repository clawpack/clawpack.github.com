
.. _timing:

Timing Statistics
=================

The `amrclaw` and `geoclaw` Fortran codes provide some timing information at the
end of a run (and also stored at the end of the file `fort.amr` in the output
directory).  

Typical output looks like this::

    ============================== Timing Data ==============================

    Integration Time (stepgrid + BC + overhead)
    Level           Wall Time (seconds)    CPU Time (seconds)   Total Cell Updates
      1                     2.850                  2.853            0.288E+07
      2                    13.214                 41.552            0.373E+08
      3                    92.774                370.259            0.260E+09
    total                 108.838                414.664            0.301E+09

    All levels:
    stepgrid              101.440                392.473    
    BC/ghost cells          5.014                 19.801
    Regridding             40.508                 40.447  
    Output (valout)        15.413                 15.402  

    Total time:           165.483                472.470  
    Using  4 thread(s)

    Note: The CPU times are summed over all threads.
          Total time includes more than the subroutines listed above

    =========================================================================


This was generated by running the code in
`$CLAW/amrclaw/examples/advection_3d_swirl` with a third level of AMR added (and
additional refinement factor 2) so that more grids are generated.

Note the following:

- All times are in seconds.

- For this example, more than 85% of the integration time is spent on the finest 
  Level 3 grids.

- OpenMP was used in this run, specifying `OMP_NUM_THREADS=4`.  Grid patches are
  then split up between threads (see :ref:`openmp`). This test problem has enough
  grid patches that the time spent in `stepgrid` (where updating each patch using
  the finite volume method) uses roughly 1/4 as much wall time as CPU time, and
  similarly for filling ghost cells.

- Regridding and output are done in serial mode, however, so the wall time for
  these portions agree with the CPU time.


